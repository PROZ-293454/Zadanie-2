package model;

import static model.Board.State.CHOOSE_MOVE;
import static model.ListOfBalls.Orientation.HORIZONTAL;

import java.util.ArrayList;
import java.util.List;

import model.ListOfBalls.Orientation;
import javafx.scene.image.ImageView;

public class Board {

	private static ListOfBalls myBallsList = new ListOfBalls();
	private static ListOfBalls opponentBallsList = new ListOfBalls();
	
	public enum State {
		CHOOSE_FIRST_BALL, CHOOSE_SECOND_BALL, CHOOSE_MOVE
	};

	public enum Move {
		E(0), SE(1), SW(2), W(3), NW(4), NE(5);
		private int id;

		Move(int id) {
			this.id = id;
		}

		int id() {
			return id;
		}
	};

	private static Move move;
	private static State state;
	private static Orientation orientation;

	private static List<Ball> chosenBalls = new ArrayList<>();
	private static List<Ball> opponentToMoveBalls = new ArrayList<>();
	//private static int dx;
	//private static int dy;
	
	
	
	
	
	public static Move getMove() {
		return move;
	}
	public static void setMove(Move move) {
		Board.move = move;
	}
	public static State getState() {
		return state;
	}
	public static void setState(State state) {
		Board.state = state;
	}
	public static Orientation getOrientation() {
		return orientation;
	}
	public static void setOrientation(Orientation orientation) {
		Board.orientation = orientation;
	}
	
	public static void addChosenBall(Ball ball) {
		chosenBalls.add(ball);
	}
	
	public static Ball getChosenBall(int id) {
		return chosenBalls.get(id);
	}
	
	public static void addRestOfChosenBalls(int dx, int dy) {
	
		int x1 = getChosenBall(0).getPosX();
		int y1 = getChosenBall(0).getPosY();
		
		for (int i = (dx>0) ? 1 : -1 ;; i += (dx>0) ? 1 : -1) {
			System.out.println(i);
			Ball tmpBall = myBallsList.getBall(x1 + dx*i, y1 + dy*i);
			if (tmpBall != null) {
				tmpBall.setImage(Ball.whiteBallImg);
				chosenBalls.add(tmpBall);
			}
			if (2 * i == Math.abs(dx)+Math.abs(dy))
				break;
		}
		orientation = HORIZONTAL;
		state = CHOOSE_MOVE;
	}
}
